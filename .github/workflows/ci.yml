name: Continuous Integration
on:
  push:
    branches:
      - master
  pull_request:

permissions:
  # Permission for checking out code
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.20'
      - name: Run linters
        uses: golangci/golangci-lint-action@v3
        with:
          args: --verbose
      - name: Generate docs
        run: go generate
      - name: Check generated files
        run: |
          status=$(git status --porcelain)
          if [ -n "$status" ]; then
            echo "you need to run 'go generate' and commit the changes"
            echo "$status"
            exit 1
          fi
  acceptance:
    name: Acceptance Tests (Terraform ${{ matrix.terraform-version }})
    runs-on: ubuntu-latest
    services:
      mysql8prod:
        image: mysql:8
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -ppass"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
      mysql8dev:
        image: mysql:8
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: pass
        ports:
          - 3307:3306
        options: >-
          --health-cmd "mysqladmin ping -ppass"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
    strategy:
      fail-fast: false
      matrix:
        terraform-version:
          - '1.2.*'
          - '1.3.*'
          - '1.4.*'
          - '1.5.*'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.20'
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform-version }}
          terraform_wrapper: false
      - name: Install Atlas-CLI
        run: |
          curl -s -A "Terraform-Provider-CI" -o /usr/local/bin/atlas \
            https://release.ariga.io/atlas/atlas-linux-amd64-latest?test=1
          chmod +x /usr/local/bin/atlas
      - run: go test -v -cover ./...
        env:
          TF_ACC: '1'
